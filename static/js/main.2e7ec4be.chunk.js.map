{"version":3,"sources":["constants/paths.js","services/yelp.js","components/search-bar/SearchBar.js","components/business-grid/BusinessCell.js","components/business-grid/BusinessGrid.js","components/home/Home.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["BASE_EXECUTION_PATH","BUSINESS_SEARCH_PATH","querystring","require","getYelpBusinesses","location","a","requestOptions","method","fetch","stringify","then","r","json","catch","err","console","log","response","JSON","parse","body","SearchBar","props","useState","searchText","setSearchText","onSubmit","Paper","className","InputBase","inputProps","style","textAlign","placeholder","defaultValue","defaultText","onChange","e","target","value","onKeyPress","event","key","IconButton","onClick","BusinessCell","Grid","item","xs","sm","md","lg","xl","Card","CardMedia","image","business","image_url","title","name","CardContent","Typography","gutterBottom","variant","component","color","price","rating","BusinessGrid","container","spacing","businesses","map","DEFAULT_SEARCH","Home","setBusinesses","setError","loading","setLoading","getBusinesses","useEffect","CircularProgress","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e7ec4be.chunk.js","sourcesContent":["// Because yelp does not support CORS, a lambda is handling requests. This is the execute url\nexport const BASE_EXECUTION_PATH = 'https://5igtrm1xeh.execute-api.us-east-1.amazonaws.com/dev';\nexport const BUSINESS_SEARCH_PATH = '/businesses/search?';","import { BASE_EXECUTION_PATH, BUSINESS_SEARCH_PATH } from '../constants/paths'\nconst querystring = require('querystring');\n\nexport async function getYelpBusinesses(location) {\n\tconst requestOptions = {\n\t\tmethod: 'GET',\n\t};\n\tconst response = await fetch(BASE_EXECUTION_PATH + BUSINESS_SEARCH_PATH + querystring.stringify({ location: location }), requestOptions)\n\t.then(r => r.json())\n\t.catch(err => {\n\t\tconsole.log(err)\n\t\tthrow err;\n\t});\n\treturn JSON.parse(response.body);\n}","import './SearchBar.css';\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function SearchBar(props)  {\n\tconst [searchText, setSearchText] = useState(null);\n\n\tconst onSubmit = () => {\n\t\t// if (searchText) {\n\t\t\tprops.onSubmit(searchText);\n\t\t// }\n\t}\n\n\tconst onChange = (e) => {\n\t\tsetSearchText(e.target.value);\n\t}\n\n  return (\n\t\t<>\n\t\t\t<Paper className=\"search-bar\">\n\t\t\t\t<InputBase\n\t\t\t\t\tinputProps={{ style: { textAlign: 'center' }}} \n\t\t\t\t\tplaceholder=\"Search for businesses\"\n\t\t\t\t\tdefaultValue={props.defaultText}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonKeyPress={event => {\n\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\tonSubmit();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Paper>\n\t\t\t<IconButton onClick={onSubmit}>\n\t\t\t\t<SearchIcon />\n\t\t\t</IconButton>\n\t\t</>\n\t);\n};\n","import './BusinessCell.css'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Card } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function BusinessCell(props)  {\n  return (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={8} md={6} lg={3} xl={2} >\n\t\t\t\t<Card className=\"cell\">\n\t\t\t\t\t<CardMedia\n\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\timage={props.business.image_url}\n\t\t\t\t\t\ttitle={props.business.name}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardContent className=\"info\">\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t{props.business.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\tPrice - {props.business.price}\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t{props.business.rating}/5\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};","import './BusinessGrid.css'\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport BusinessCell from './BusinessCell';\n\nexport default function BusinessGrid(props)  {\n  return (\n\t\t<>\n\t\t\t<Grid container className=\"grid\" spacing={3} xs={12}>\n\t\t\t\t{props.businesses.map(business => \n\t\t\t\t\t<BusinessCell\n\t\t\t\t\t\tbusiness={business}/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</>\n\t);\n};","import './Home.css'\nimport React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getYelpBusinesses } from '../../services/yelp';\nimport SearchBar from '../search-bar/SearchBar';\nimport BusinessTable from '../business-grid/BusinessGrid';\n\nconst DEFAULT_SEARCH = \"Minneapolis, MN\";\n\nexport default function Home()  {\n\tconst [businesses, setBusinesses] = useState(null);\n\tconst [error, setError] = useState(false);\n\tconst [loading, setLoading] = useState(true);\n\n\tconst searchTextChanged = (searchText) => {\n\t\tgetBusinesses(searchText);\n\t}\n\n\tconst getBusinesses = async (searchText) => {\n\t\tvar response;\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tresponse = await getYelpBusinesses(searchText);\n\t\t} catch (e) {\n\t\t\tsetError(true);\n\t\t\tsetLoading(false);\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(false);\n\t\tsetBusinesses(response.businesses);\n\t};\n\n\tuseEffect(() => {\n\t\tgetBusinesses(DEFAULT_SEARCH);\n\t}, []);\n\n  return (\n\t\t<>\n\t\t\t<div className=\"header\">\n\t\t\t\t<h1>Search Businesses</h1>\n\t\t\t\t<SearchBar\n\t\t\t\t\tdefaultText={DEFAULT_SEARCH}\n\t\t\t\t\tonSubmit={searchTextChanged}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"spacer\"/>\n\t\t\t<br/>\n\t\t\t{ loading && <CircularProgress/> }\n\t\t\t{ !loading &&\n\t\t\t\t( businesses ? \n\t\t\t\t\t<BusinessTable\n\t\t\t\t\t\tbusinesses={businesses}/>: <h1>Sorry, no business found</h1>\n\t\t\t\t)\n\t\t\t}\n\t\t</>\n\t);\n};\n\n","import './App.css';\nimport Home from '../home/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}